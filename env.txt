# ===========================================
# Farm Management System - Environment Variables
# สำหรับระบบหลังจาก Refactor Authentication เป็น JWT-based
# ===========================================

# ===========================================
# Database Configuration (Prisma)
# ===========================================
DATABASE_URL="postgresql://username:password@localhost:5432/farm_management?schema=public"
DIRECT_URL="postgresql://username:password@localhost:5432/farm_management?schema=public"

# ===========================================
# JWT Authentication Configuration
# ===========================================
# JWT Secret สำหรับ sign/verify tokens (ควรเป็น random string ยาวๆ)
JWT_SECRET="your-super-secret-jwt-key-should-be-very-long-and-random-string-here-for-production-use-at-least-32-characters"

# JWT Access Token Expiry (24 hours = 86400 seconds)
JWT_ACCESS_EXPIRY="86400"

# JWT Refresh Token Expiry (30 days = 2592000 seconds)  
JWT_REFRESH_EXPIRY="2592000"

# ===========================================
# Email Service Configuration (Resend)
# ===========================================
# Resend API Key สำหรับส่ง password reset emails
RESEND_API_KEY="re_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

# Email ต้นทางสำหรับส่ง password reset emails
FROM_EMAIL="noreply@yourdomain.com"

# Base URL สำหรับ password reset links
NEXT_PUBLIC_BASE_URL="http://localhost:3000"

# ===========================================
# Supabase Storage Configuration (File Uploads Only)
# ===========================================
# Supabase URL สำหรับ Storage API
NEXT_PUBLIC_SUPABASE_URL="https://your-project-id.supabase.co"

# Supabase Anon Key สำหรับ Storage API
NEXT_PUBLIC_SUPABASE_ANON_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."

# Supabase Service Role Key สำหรับ server-side Storage operations
SUPABASE_SERVICE_ROLE_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."

# ===========================================
# Application Configuration
# ===========================================
# Environment สำหรับแสดง error messages และ debugging
NODE_ENV="development"

# Next.js App URL
NEXTAUTH_URL="http://localhost:3000"

# ===========================================
# Security Configuration
# ===========================================
# Password complexity requirements (optional, for documentation)
# MIN_PASSWORD_LENGTH="8"
# REQUIRE_UPPERCASE="true"
# REQUIRE_LOWERCASE="true" 
# REQUIRE_NUMBERS="true"
# REQUIRE_SPECIAL_CHARS="true"

# Rate limiting configuration (optional)
# RATE_LIMIT_MAX="10"
# RATE_LIMIT_WINDOW="900000"

# ===========================================
# Development & Debugging
# ===========================================
# Logging level
LOG_LEVEL="info"

# Debug mode สำหรับ JWT
DEBUG_JWT="false"

# ===========================================
# Production Notes
# ===========================================
# สำหรับ Production:
# 1. เปลี่ยน JWT_SECRET เป็น random string ที่ปลอดภัย (อย่างน้อย 32 ตัวอักษร)
# 2. ตั้งค่า NODE_ENV="production"
# 3. ใช้ HTTPS URLs สำหรับ NEXT_PUBLIC_BASE_URL
# 4. ปรับ RESEND_API_KEY และ FROM_EMAIL ให้เป็นของจริง
# 5. ตั้งค่า rate limiting และ security headers
# 6. ใช้ database connection pool สำหรับ DATABASE_URL
# 7. ใช้ strong JWT_SECRET ที่สร้างจาก crypto.randomBytes(64).toString('hex')
# =========================================== 