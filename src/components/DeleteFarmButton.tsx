'use client'

import { useState } from 'react'

interface DeleteFarmButtonProps {
  farmId: string
}

export default function DeleteFarmButton({ farmId }: DeleteFarmButtonProps) {
  const [isDeleting, setIsDeleting] = useState(false)

  const handleDelete = async () => {
    if (
      !window.confirm(
        '‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏ô‡∏µ‡πâ? ‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÑ‡∏î‡πâ',
      )
    ) {
      return
    }

    setIsDeleting(true)

    try {
      const response = await fetch(`/api/farm/${farmId}`, {
        method: 'DELETE',
      })

      if (response.ok) {
        window.location.href = '/farms?success=‡∏•‡∏ö‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß'
      } else {
        const error = await response.json()
        alert(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${error.message || '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏ü‡∏≤‡∏£‡πå‡∏°‡πÑ‡∏î‡πâ'}`)
      }
    } catch (error) {
      console.error('Error deleting farm:', error)
      alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏ü‡∏≤‡∏£‡πå‡∏°')
    } finally {
      setIsDeleting(false)
    }
  }

  return (
    <button
      onClick={handleDelete}
      disabled={isDeleting}
      className={`btn btn-error btn-sm ${isDeleting ? 'loading' : ''}`}
    >
      {isDeleting ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö...' : 'üóëÔ∏è ‡∏•‡∏ö‡∏ü‡∏≤‡∏£‡πå‡∏°'}
    </button>
  )
}
